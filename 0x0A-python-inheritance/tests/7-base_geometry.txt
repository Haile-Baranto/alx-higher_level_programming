# 7-base_geometry.txt

===========================
How to Use 7-base_geometry.py
===========================
The module contains doctest for integer_validator(self, name, value)
prototype: ``def integer_validator(self, name, value)``.
"""
tests/7-base_geometry.txt

This file contains edge test cases for the BaseGeometry class.

To run the tests, run the following command:
python -m doctest -v tests/7-base_geometry.txt
"""
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

# Edge test cases for the integer_validator method

# Edge case: Non-integer value with various names
>>> bg = BaseGeometry()
>>> bg.integer_validator("height", "test")
Traceback (most recent call last):
...
TypeError: height must be an integer

# Edge case: Zero value with various names
>>> bg.integer_validator("length", 0)
Traceback (most recent call last):
...
ValueError: length must be greater than 0

# Edge case: Negative value with various names
>>> bg.integer_validator("depth", -10)
Traceback (most recent call last):
...
ValueError: depth must be greater than 0

# Edge case: Integer value 1 with various names
>>> bg.integer_validator("width", 1)

# Edge case: Large positive integer value with various names
>>> bg.integer_validator("size", 1000000)

# Edge case: Integer value in a string format with various names
>>> bg.integer_validator("count", "42")
Traceback (most recent call last):
...
TypeError: count must be an integer

# Edge case: Empty string value with various names
>>> bg.integer_validator("age", "")
Traceback (most recent call last):
...
TypeError: age must be an integer

# Edge case: None value with various names
>>> bg.integer_validator("quantity", None)
Traceback (most recent call last):
...
TypeError: quantity must be an integer

# Edge case: Float value with various names
>>> bg.integer_validator("weight", 3.14)
Traceback (most recent call last):
...
TypeError: weight must be an integer

# Edge case: Integer value as a boolean with various names
>>> bg.integer_validator("flag", True)


# Additional edge test cases

>>> bg.integer_validator('name', float('inf'))
Traceback (most recent call last):
...
TypeError: name must be an integer


>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator('name')
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'


>>> bg.area(12)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

>>> bg.integer_validator('name', 12, 'hola')
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given


>>> bg.integer_validator('name', 12.5)
Traceback (most recent call last):
...
TypeError: name must be an integer

	
>>> doc = BaseGeometry = __import__('7-base_geometry').__doc__
>>> len(doc) > 1
True


>>> doc = BaseGeometry = __import__('7-base_geometry').BaseGeometry.__doc__
>>> len(doc) > 1
True


>>> doc = BaseGeometry = __import__('7-base_geometry').BaseGeometry.area.__doc__
>>> len(doc) > 1
True

>>> doc = BaseGeometry = __import__('7-base_geometry').BaseGeometry.integer_validator.__doc__
>>> len(doc) > 1
True
