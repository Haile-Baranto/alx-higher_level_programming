# File: 0-add_integer.txt

***************************
How to use 0-add_integers.py
****************************

The module shows how to use 0-add_ingers.py module

Usage:
******
add_integer(a, b=98) makes integer addition of its two arguements

>>> add_integer = __import__('0-add_integer').add_integer

****************************
when It recieves both integer
****************************

>>> add_integer(12, 11)
23

>>> add_integer(50, -50)
0

>>> add_integer(-12, -12)
-24

********************************************************
When the function recieves both of its arguements floats
********************************************************

>>> add_integer(2.5, 3.6)
5

>>> add_integer(-2.6, -98.8)
-100

>>> add_integer(-2.5, 102.2)
100

*************************************************************
when the function recieves integer and float as its arguements
**************************************************************
>>> add_integer(2, 3.6)
5

>>> add_integer(2, -3.6)
-1
>>> add_integer(-2, 1002.5)
1000

*************************************************************
when the function Recieves one arguement of type float or int
this number will be added to default value of b = 98
**************************************************************

>>> add_integer(2)
100

>>> add_integer(-2)
96
>>> add_integer(-2.5)
96

*******************
******************
Errors
******************
******************

**************************************************
when None is the only arguement of of the function 
**************************************************

>>> add_integer(None)
Traceback (most recent call last):
ValueError: a must be an integer

*******************************************************
when both the arguements are neither integer nor float
********************************************************
>>> add_integer("Hello", "doctest")
Traceback (most recent call last):
ValueError: a must be an integer

**********************************************
when b is neither float or int and a either float or int
***********************************************

>>> add_integer(2, None)
Traceback (most recent call last):
ValueError: b must be an integer

>>> add_integer(2, "Hello")
Traceback (most recent call last):
ValueError: b must be an integer

**********************************
Cannot convert float NaN to integer
*************************************

    >>> add_integer(float('NaN'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

**************************************************
If the function receives as parameter float('inf')
***************************************************

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(-float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer




















