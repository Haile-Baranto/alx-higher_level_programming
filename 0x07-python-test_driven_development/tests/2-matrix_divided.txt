# File: 2-matrix_divided.text

***************************
How to use 2-matrix_divided.py
****************************

The module shows how to use 2-matrix_divided.py module

Usage:
******
matrix_divided(matrix, div) divides each element of matrix by div

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

CASSES 

*********************************************************************
When matrix is list of lists, each element of matrix is either float or int
and div is differnt from zero
**********************************************************************

>>> matrix_divided([[1, 4, 4], [10, 20.1, 30]], 2)
[[0.5, 2.0, 2.0], [5.0, 10.05, 15.0]]

************************************
When we pass less than two arguement
*************************************
>>> matrix_divided([[1, 2, 3], [1, 2, 3]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided(3)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>> matrix_divided("Hello")
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

********************************************************
When matrix is  not list of lists and have two arguements
*********************************************************

>>> matrix_divided([], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(([1, 2], [2, 3, 3]), -2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

**********************************************************************************
when the function recive two arguements but there is at least one none int element
on the matrix 
**********************************************************************************
>>> matrix_divided([[1, 2, 3], [1, 2, None]], "Hi")
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], ["Hello", 2]], 4.5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

***************************************************************************
when the program accept two arguements and (matrix is list of lists and each
element of the matrix are either float or int) But len(raw) not equal
******************************************************************************

>>> matrix_divided([[1, 2, 3], [1, 2]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [1, 2]], "hello")
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

***************************************************************************
when the program accept two arguements and (matrix is list of lists and each
element of the matrix are either float or int) and len(raw) of matrix are equal
but div is neither enteger nor float
******************************************************************************


>>> matrix_divided([[1, 2, 3], [1, 2, 4]], "hello")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [1, 2, 4.5]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [1, 2, -4]], inf)
Traceback (most recent call last):
NameError: name 'inf' is not defined

***************************************************************************
when the program accept two arguements and (matrix is list of lists and each
element of the matrix are either float or int) and len(raw) of matrix are equal
but div is zero
******************************************************************************

>>> matrix_divided([[1, 2, 3], [1, 2, 4.5]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero


Matrix divide float('inf')

::
    >>> matrix = [
    ...     [5, 63, 0],
    ...     [6, 3, 56],
    ...     [8, 23, 5],
    ...     [21, 54, 6]
    ... ]
    >>> print(matrix_divided(matrix, float('inf')))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]





