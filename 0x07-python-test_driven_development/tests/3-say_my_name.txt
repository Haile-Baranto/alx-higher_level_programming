# File: say_my_name.txt test for say_my_name.py module

***************************
How to use say_my_name.py
****************************

The module shows how to use 0-add_ingers.py module

Usage:
******
say_my_name function accepts two strings with the second optional
prints "My name is < name> <last name>

>>> say_my_name = __import__('3-say_my_name').say_my_name

##########
Edge cases
##########

###################################
When Both the arguments are strings
###################################
    >>> say_my_name("Haile", "Baranto")
    My name is Haile Baranto

##############################
when only one string is passed Note: second arguement is otional
##############################
    >>> say_my_name("Haile")
    My name is Haile 

"Errors"

when first name is not string regardless of the second

    >>> say_my_name(2, "Haile")
    Traceback (most recent call last):
    TypeError: first_name must be a string

    >>> say_my_name(None, "Baranto")
    Traceback (most recent call last):
    TypeError: first_name must be a string

    >>> say_my_name(True, "weldehiet")
    Traceback (most recent call last):
    TypeError: first_name must be a string

    >>> say_my_name(True)
    Traceback (most recent call last):
    TypeError: first_name must be a string

When the first name is string but the second is not
    >>> say_my_name("Haile", 2)
    Traceback (most recent call last):
    TypeError: last_name must be a string

    >>> say_my_name("Baranto", 3)
    Traceback (most recent call last):
    TypeError: last_name must be a string

when we pass no arguement
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'